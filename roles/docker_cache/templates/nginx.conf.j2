
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    include /etc/nginx/ssl.conf;

    sendfile        on;
    tcp_nopush     on;  # wait to fill MTU
    keepalive_timeout  65;
    gzip  off;  # This will only run internally so bandwidth is "unlimited"
    client_body_buffer_size     10M;
    client_max_body_size        10M;

    server {
        # Redirect all to HTTPS
        listen 80 default_server;
        listen [::]:80;

        server_name _;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name {{ mirror_hostname }};
        access_log {{ mirror_hostname }}.log;

        # Redirect to caching layer
        location / {
            proxy_pass http://docker-cache:5000;
            proxy_set_header  host  $http_host;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
        }

    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name {{ harbor_hostname }};
        access_log {{ harbor_hostname }}.log;

        # Redirect to harbor on host machine
        location / {
            proxy_pass https://172.17.0.1:4443;
        }
    }
}
