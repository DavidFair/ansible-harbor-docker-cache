---
- name: Add docker repository # as upstream is too old on SL7
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: Install required packages
  yum: # or apt
    name:
      - "docker-ce"
      - "docker-ce-cli"
      - "containerd.io"
      - "python-pip"
      - "patch" # For workaround described below
    state: present

- name: Ensure docker is enabled as a startup service
  systemd:
    name: docker
    enabled: yes
    masked: no

# Docker compose is too old on Ubuntu 18.04, and there is no
# PPA (for project political reasons) so we have to curl it...
- name: Download latest docker-compose binary
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version}}/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: +x

# We need to update pip on the host as 8.0 (SL7 default) is too old
- name: Pip Update
  pip:
    name: pip
    version: 20.3.4 # 21 >= has no support for Python 2
    state: present

- name: Install python SDKs
  pip:
    name:
      - docker
      - docker-compose
      - setuptools
    state: latest

- name: Create working dir
  file:
    state: directory
    path: /opt/nginx

- name: Copy across certificate files
  copy:
    src: "{{ item }}"
    dest: "/etc/ssl/private/{{ item }}"
  with_items:
    - fullchain.pem
    - privkey.pem
  when: host_ssl_termination == true

- name: Configure nginx reverse proxy templates
  template:
    src: "{{ item }}.j2"
    dest: "/opt/nginx/{{ item }}"
  with_items:
    - docker-compose.yml
    - nginx.conf

- name: Configure nginx SSL
  template:
    src: "{{ item }}.j2"
    dest: "/opt/nginx/{{ item }}"
  with_items:
    - ssl.conf
  when: host_ssl_termination == true

- name: Copy in config for registry
  copy:
    src: cache-config.yml
    dest: /opt/nginx/cache-config.yml

- name: Get DH-Curve
  # This is safe to do, as having a DH curve does not help you
  # find the randomly selected point, as a by-product of forward secrecy
  get_url:
    url: https://ssl-config.mozilla.org/ffdhe2048.txt
    dest: /etc/ssl/private/ffdhe2048.txt
  when: host_ssl_termination == true

- name: Ensure /etc/docker exists on new install
  file:
    path: /etc/docker
    state: directory

- name: Set local machine to use configured mirror
  template:
    src: docker-daemon.json.j2
    dest: /etc/docker/daemon.json

- name: Restart docker service to use configured mirror
  service:
    name: docker
    state: restarted

- name: Stop frontend service
  docker_compose:
    project_src: /opt/nginx
    state: present
    stopped: yes

- name: Install systemd unit
  copy:
    src: docker-compose.service
    dest: /etc/systemd/system/docker-compose@nginx.service
    mode: 0644
    owner: root
    group: root

- name: Load nginx unit into systemd
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start and enable nginx unit using systemd
  systemd:
    name: docker-compose@nginx
    state: restarted
    enabled: yes
    masked: no
